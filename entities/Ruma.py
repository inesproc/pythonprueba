from sqlalchemy import Column, Integer, String, DateTime, Numeric
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class Ruma(Base):
    __tablename__ = 'Ruma'

    # Campos principales
    Id = Column(Integer, primary_key=True, autoincrement=True, name='Id')
    RumaNro = Column(String(255), nullable=True, name='RumaNro')
    Cantidad = Column(Integer, nullable=True, name='Cantidad')
    UM = Column(String(50), nullable=True, name='UM')
    Codigo = Column(Integer, nullable=False, name='Codigo')
    DescripcionMaterial = Column(String(255), nullable=True, name='DescripcionMaterial')
    CentroUbicacion = Column(String(100), nullable=True, name='CentroUbicacion')
    AlmacenUbicacion = Column(String(100), nullable=True, name='AlmacenUbicacion')
    TipoProduccion = Column(String(50), nullable=True, name='TipoProduccion')
    CentroProduccion = Column(String(50), nullable=True, name='CentroProduccion')
    CalidadPlanta = Column(String(50), nullable=True, name='CalidadPlanta')
    CierreVta = Column(String(50), nullable=True, name='CierreVta')
    Posicion = Column(Integer, nullable=False, name='Posicion')
    Material = Column(Integer, nullable=False, name='Material')
    CantPreAsignado = Column(Integer, nullable=True, name='CantPreAsignado')
    CantTransito = Column(Integer, nullable=True, name='CantTransito')
    CantLote = Column(Integer, nullable=True, name='CantLote')
    LoteExp = Column(String(50), nullable=True, name='LoteExp')
    UbicacionAlmacen = Column(String(100), nullable=True, name='UbicacionAlmacen')
    FechaContabilizacion = Column(DateTime, nullable=True, name='FechaContabilizacion')
    FechaFabricacion = Column(DateTime, nullable=True, name='FechaFabricacion')
    Certificadora = Column(String(100), nullable=True, name='Certificadora')
    FAnalFcoQco = Column(DateTime, nullable=True, name='FAnalFcoQco')
    FAnalMicobiol = Column(DateTime, nullable=True, name='FAnalMicobiol')
    FVAnalFcoQco = Column(DateTime, nullable=True, name='FVAnalFcoQco')
    FVAnalMicobiol = Column(DateTime, nullable=True, name='FVAnalMicobiol')
    ProteinaPorc = Column(Numeric(18, 2), nullable=True, name='ProteinaPorc')
    TVNmg100g = Column(Numeric(18, 2), nullable=True, name='TVNmg100g')
    Histaminappm = Column(Numeric(18, 2), nullable=True, name='Histaminappm')
    HumedadPorc = Column(Numeric(18, 2), nullable=True, name='HumedadPorc')
    GrasasPorc = Column(Numeric(18, 2), nullable=True, name='GrasasPorc')
    CenizasPorc = Column(Numeric(18, 2), nullable=True, name='CenizasPorc')
    ClorurosPorc = Column(Numeric(18, 2), nullable=True, name='ClorurosPorc')
    ArenaPorc = Column(Numeric(18, 2), nullable=True, name='ArenaPorc')
    AcidezPorc = Column(Numeric(18, 2), nullable=True, name='AcidezPorc')
    AOppm = Column(Numeric(18, 2), nullable=True, name='AOppm')
    Cadmio = Column(Numeric(18, 2), nullable=True, name='Cadmio')
    Hierro = Column(Numeric(18, 2), nullable=True, name='Hierro')
    Proximal = Column(Numeric(18, 2), nullable=True, name='Proximal')
    GranulometriaPorc = Column(Numeric(18, 2), nullable=True, name='GranulometriaPorc')
    DensAparGml = Column(Numeric(18, 2), nullable=True, name='DensAparGml')
    DensCompGml = Column(Numeric(18, 2), nullable=True, name='DensCompGml')
    NroFlujoCm = Column(Numeric(18, 2), nullable=True, name='NroFlujoCm')
    Salmonella = Column(String(50), nullable=True, name='Salmonella')
    Shiguella = Column(String(50), nullable=True, name='Shiguella')
    EnterobactUfcG = Column(String(50), nullable=True, name='EnterobactUfcG')
    Intervalo = Column(Integer, nullable=True, name='Intervalo')
    Nro = Column(String(50), nullable=True, name='Nro')
    ClaseInsp = Column(Integer, nullable=True, name='ClaseInsp')
    TempElevadaC = Column(Numeric(18, 2), nullable=True, name='TempElevadaC')
    ColorHarina = Column(String(50), nullable=True, name='ColorHarina')
    PresenciaMatExtrana = Column(String(50), nullable=True, name='PresenciaMatExtrana')
    CamaroncilloPorc = Column(Numeric(18, 2), nullable=True, name='CamaroncilloPorc')
    CamaroncilloCualit = Column(String(50), nullable=True, name='CamaroncilloCualit')
    BHTNIR = Column(Numeric(18, 2), nullable=True, name='BHTNIR')
    HierroNIR = Column(Numeric(18, 2), nullable=True, name='HierroNIR')
    feccrea = Column(DateTime, nullable=False, name='feccrea')
    IdBatch = Column(String(50), nullable=True, name='IdBatch')

    # Preasignaciones OUTPUT
    IdEjecucion = Column(Integer, nullable=False, name='IdEjecucion')
    UpgradeFinal = Column(String(100), nullable=True, name='UpgradeFinal')
    Calidad = Column(String(50), nullable=True, name='Calidad')
    Estado = Column(String(50), nullable=True, name='Estado')
    FechaPreAsignacion = Column(DateTime, nullable=True, name='FechaPreAsignacion')
    NroPedido = Column(String(250), nullable=True, name='NroPedido')
    # Auxiliares
    TM = Column(Numeric(18, 2), nullable=True, name='TM')
    KG = Column(Numeric(18, 2), nullable=True, name='KG')
    Prod = Column(String(100), nullable=True, name='Prod')
    Indice = Column(Numeric(18, 2), nullable=True, name='Indice')
    FFab = Column(String(50), nullable=True, name='FFab')
    FFabFinal = Column(DateTime, nullable=True, name='FFabFinal')
    FFabUltima = Column(DateTime, nullable=True, name='FFabUltima')
    FIFO = Column(Integer, nullable=True, name='FIFO')
    Precio = Column(Integer, nullable=True, name='Precio')

    def __repr__(self):
        return f"<Ruma(Id={self.Id}, RumaNro={self.RumaNro}, Cantidad={self.Cantidad})>"
